<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.score.mapper.ScoreMapper">

    <!-- ImpactRow 映射：顶层 + 子指数 -->
    <resultMap id="ImpactRowMap" type="com.example.score.domain.ImpactRow">
        <result property="markTime"         column="markTime"/>
        <result property="topIndexValue"    column="topIndexValue"/>

        <result property="subIndexName"     column="subIndexName"/>
        <result property="subIndexCode"     column="subIndexCode"/>
        <result property="subIndexWeight"   column="subIndexWeight"/>
        <result property="subIndexValue"    column="subIndexValue"/>

        <!-- 其余字段保留为空（扩展用） -->
        <result property="paramName"        column="paramName"/>
        <result property="paramCode"        column="paramCode"/>
        <result property="paramWeight"      column="paramWeight"/>
        <result property="paramValue"       column="paramValue"/>
        <result property="basicName"        column="basicName"/>
        <result property="basicCode"        column="basicCode"/>
        <result property="basicUnit"        column="basicUnit"/>
        <result property="basicValue"       column="basicValue"/>
        <result property="blastName"        column="blastName"/>
        <result property="procParamId"      column="procParamId"/>
    </resultMap>

    <select id="selectImpactRows" resultMap="ImpactRowMap" timeout="15">
        -- 两段时间窗：[time, time+59s]；显式类型，避免 -418
        WITH win(w, t_start, t_end, t_in14) AS (
            SELECT
                1,
                TIMESTAMP_FORMAT(#{time1}, 'YYYYMMDDHH24MISS'),
                TIMESTAMP_FORMAT(#{time1}, 'YYYYMMDDHH24MISS') + 59 SECONDS,
                CAST(#{time1} AS CHAR(14))
            FROM SYSIBM.SYSDUMMY1
            UNION ALL
            SELECT
                2,
                TIMESTAMP_FORMAT(#{time2}, 'YYYYMMDDHH24MISS'),
                TIMESTAMP_FORMAT(#{time2}, 'YYYYMMDDHH24MISS') + 59 SECONDS,
                CAST(#{time2} AS CHAR(14))
            FROM SYSIBM.SYSDUMMY1
        ),

             -- 顶层(总指数)：MODEL_DATA_INDEX，挑每个时间窗一条（优先等于入参秒，其次窗内最新）
             top_src AS (
                 SELECT
                     w.w,
                     i.GENERATE_TIME                                    AS gt,
                     VARCHAR_FORMAT(i.GENERATE_TIME,'YYYYMMDDHH24MISS') AS markTime,
                     i.INDEX_VALUE                                      AS topIndexValue,
                     CASE WHEN i.GENERATE_TIME = w.t_start THEN 0 ELSE 1 END AS pref
                 FROM win w
                          JOIN T_MD_DIAGNOSE_MODEL_DATA_INDEX i
                               ON i.INDEX_ID = 'B4TEN_I'
                                   AND i.GENERATE_TIME BETWEEN w.t_start AND w.t_end
             ),
             top_pick AS (
                 SELECT w, markTime, gt, topIndexValue
                 FROM (
                          SELECT
                              w, markTime, gt, topIndexValue,
                              ROW_NUMBER() OVER (PARTITION BY w ORDER BY pref ASC, gt DESC) rn
                          FROM top_src
                      ) t
                 WHERE rn = 1
             ),

             -- 子指数定义：仅取属于 B4TEN_I 的五个；并给定固定顺序
             sub_def AS (
                 SELECT
                     si.SUBINDEX_ID,
                     si.SUBINDEX_NAME,
                     si.INDEX_ID   AS subIndexCode,
                     si.WEIGHT     AS subIndexWeight,
                     CASE si.SUBINDEX_NAME
                         WHEN '下料稳定性'     THEN 1
                         WHEN '压量关系稳定性' THEN 2
                         WHEN '炉缸工况稳定性' THEN 3
                         WHEN '操作炉型稳定性' THEN 4
                         WHEN '煤气流分布稳定性' THEN 5
                         ELSE 99
                         END AS ord
                 FROM T_MD_DIAGNOSE_MODEL_SUBINDEX_INFO si
                 WHERE si.INDEX_ID = 'B4TEN_I'
                   AND si.SUBINDEX_NAME IN ('下料稳定性','压量关系稳定性','炉缸工况稳定性','操作炉型稳定性','煤气流分布稳定性')
             ),

             -- 子指数取值：与顶层选出的同一秒对齐（GENERATE_TIME = 顶层 gt）
             sub_match AS (
                 SELECT
                     tp.w,
                     tp.markTime,
                     sd.SUBINDEX_NAME,
                     sd.subIndexCode,
                     sd.subIndexWeight,
                     d.SUBINDEX_VALUE,
                     ROW_NUMBER() OVER (
              PARTITION BY tp.w, sd.SUBINDEX_ID
              ORDER BY d.GENERATE_TIME DESC
          ) rn
                 FROM top_pick tp
                          CROSS JOIN sub_def sd
                          LEFT JOIN T_MD_DIAGNOSE_MODEL_DATA_SUBINDEX d
                                    ON d.SUBINDEX_ID   = sd.SUBINDEX_ID
                                        AND d.GENERATE_TIME = tp.gt
             )

        SELECT
            tp.markTime                       AS markTime,        -- 顶层 markTime（来自 MODEL_DATA_INDEX）
            tp.topIndexValue                  AS topIndexValue,   -- 顶层 value = INDEX_VALUE

            sm.SUBINDEX_NAME                  AS subIndexName,    -- 子指数 name
            sm.subIndexCode                   AS subIndexCode,    -- 子指数 code = SUBINDEX_INFO.INDEX_ID
            sm.subIndexWeight                 AS subIndexWeight,  -- 子指数 weight
            sm.SUBINDEX_VALUE                 AS subIndexValue    -- 子指数 value = DATA_SUBINDEX.SUBINDEX_VALUE

        FROM top_pick tp
                 LEFT JOIN (SELECT * FROM sub_match WHERE rn = 1) sm
                           ON sm.w = tp.w

        ORDER BY tp.markTime ASC,
                 CASE sm.SUBINDEX_NAME
                     WHEN '下料稳定性'     THEN 1
                     WHEN '压量关系稳定性' THEN 2
                     WHEN '炉缸工况稳定性' THEN 3
                     WHEN '操作炉型稳定性' THEN 4
                     WHEN '煤气流分布稳定性' THEN 5
                     ELSE 99
                     END;
    </select>

    <!-- 预留：第三层过程数据批量取值（当前阶段不使用） -->
    <select id="selectProcessDataValuesBatch" resultType="map">
        SELECT t.PARAMID AS paramId, t.VALUE AS value
        FROM ${table} t
        WHERE t.GENERATE_TIME = TIMESTAMP_FORMAT(#{time}, 'YYYYMMDDHH24MISS')
        AND t.PARAMID IN
        <foreach collection="paramIds" item="pid" open="(" close=")" separator=",">
            #{pid}
        </foreach>
    </select>
</mapper>
